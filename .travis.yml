language: python

matrix:
  include:
  - env: export PYTHON=3.5; FAIL_ON_EXTERNAL_DEPRECATION='False'; MINIMAL_ENV='False'
  - env: export PYTHON=3.5; FAIL_ON_EXTERNAL_DEPRECATION='False'; MINIMAL_ENV='False'; MPLBACKEND="agg"
    os: osx
    language: generic
  - env: export PYTHON=3.6; FAIL_ON_EXTERNAL_DEPRECATION='False'; MINIMAL_ENV='False'
  - env: export PYTHON=3.6; FAIL_ON_EXTERNAL_DEPRECATION='True'; MINIMAL_ENV='False'
  - env: export PYTHON=3.6; FAIL_ON_EXTERNAL_DEPRECATION='False'; MINIMAL_ENV='True'
  - env: export PYTHON=3.6; FAIL_ON_EXTERNAL_DEPRECATION='False'; MINIMAL_ENV='False'; MPLBACKEND="agg"
    os: osx
    language: generic
  allow_failures:
  - env: export PYTHON=3.6; FAIL_ON_EXTERNAL_DEPRECATION='True'; MINIMAL_ENV='False'

before_install:
  - if [[ $TRAVIS_OS_NAME == 'osx' ]] ; then
      curl "https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -o miniconda.sh;
    else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - chmod +x miniconda.sh;
    ./miniconda.sh -b -p $HOME/miniconda;
    export "PATH=$HOME/miniconda/bin:$PATH";
    hash -r;
install:

  - if [[ $MINIMAL_ENV == 'False' ]] ; then
      DEPS="pip numpy scipy matplotlib ipython h5py sympy scikit-learn dill natsort setuptools scikit-image cython lxml ipyparallel dask traits traitsui";
    else DEPS="pip ipython numpy scipy matplotlib h5py sympy scikit-image";
    fi
  - conda create -n testenv --yes python=$PYTHON;
    source activate testenv;
    conda install -y -c conda-forge $DEPS;
  - if [[ $MINIMAL_ENV == 'False' ]] ; then
      pip install .[all];
    else pip install .;
    fi
  - python setup.py build_ext --inplace;

before_script: # configure a headless display to test plot generation
  - "export DISPLAY=:99.0"
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then sh -e /etc/init.d/xvfb start; fi
  - sleep 3 # give xvfb some time to start

script:
  - pip install coverage coveralls pytest pytest-cov pytest-mpl;
    py.test --mpl --cov=hyperspy --pyargs hyperspy;

after_success:
- coveralls
- if [[ $MINIMAL_ENV == 'False' ]]; then
    python setup.py bdist_wheel;
  else python setup.py sdist;
  fi

before_deploy:
- export DISTRIB=$(ls ./dist/*.whl);

deploy:
  provider: releases
  api_key:
    #francisco-dlp:
    secure: dTt5L3HsIrfTOvnU8QFqwMu+Ghpuzp+vr0y7skRbqdFBCmPfjbAe2l24haMidVC1x0ZikHGgv9krEd/aKEBLi6QM+E2KsxiXUJWlhTFMH5o8qsMTBSAS2ChfQ32Jlktg8oK0FMs+UO6EFbMz1cr7m1Fgc0Ikds1ZCzev6Uke2Zk=
  file: "${DISTRIB}"
  skip_cleanup: true
  on:
    tags: true
    condition: $MINIMAL_ENV = 'False'
